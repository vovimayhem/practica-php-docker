#
version: "2.4"

volumes:
  mysql_data:
  app_node_modules:
  composer_vendor:

services:
  mysql:
    image: mysql:5.7
    ports:
    # HOST PORT : CONTAINER PORT
    - ${DEMO_MYSQL_PORT:-3306}:3306
    volumes:
    # SOURCE : DESTINATION (TARGET)
    - mysql_data:/var/lib/mysql
    - ./database/create_databases.sql:/docker-entrypoint-initdb.d/01_create_databases.sql
    environment:
      MYSQL_USER: demo
      MYSQL_PASSWORD: 3x4mpl3P455w0rd
      MYSQL_ROOT_PASSWORD: 3x4mpl3P455w0rd

  test: &app_base
    image: php-demo:development
    build:
      context: .
      target: development
      args:
      - DEVELOPER_UID=${UID:-1000}
      - DEVELOPER_USER=${USER:-you}

    entrypoint: /usr/src/bin/dev-entrypoint.sh
    command: phpunit-watcher watch

    # Start mysql before starting this service:
    depends_on:
    - mysql
    volumes:
    - .:/usr/src
    - app_node_modules:/usr/src/node_modules
    - composer_vendor:/usr/src/vendor

    # Keep the stdin open, so we can attach to our app container's process
    # and do things such as byebug, etc:
    stdin_open: true

    # Enable sending signals (CTRL+C, CTRL+P + CTRL+Q) into the container:
    tty: true

    environment: &app_env
      APP_ENV: test
      APP_DEBUG: 'true'
      APP_LOG_LEVEL: debug
      APP_URL: http://localhost:8000

      APP_KEY: base64:5aoHpAok0Sjdq2Nhx44MvDzMcnAqZ/qzRxfHG++S8wU=

      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_USERNAME: demo
      DB_PASSWORD: 3x4mpl3P455w0rd
      DB_DATABASE: demo_test

      LOG_CHANNEL: stdout

  web:
    <<: *app_base
    ports:
    - ${DEMO_WEB_PORT:-8000}:8000
    command: php artisan serve --host=0.0.0.0 --port=8000
    depends_on:
    - mysql
    - webpack
    environment:
      <<: *app_env
      APP_ENV: development
      DB_DATABASE: demo_development

  webpack:
    <<: *app_base
    depends_on: []
    # We can also use 'watch-poll' for those running on VirtualBox...
    command: yarn run ${MIX_WATCH_TASK:-watch}
